#!/bin/bash
# PostResponse Hook - Track when Claude completes tasks and calculate duration

source "$(dirname "$0")/shared-functions.sh"
init_hook_env

# Record task completion time (integer seconds for compatibility)
TASK_END_TIME=$(date +%s)

# Read start time if it exists
START_TIME_FILE="$PROJECT_ROOT/.claude/task-start-time"
if [ -f "$START_TIME_FILE" ]; then
    TASK_START_TIME=$(cat "$START_TIME_FILE" | cut -d. -f1)  # Extract integer part
    
    # Calculate duration in seconds using shell arithmetic
    DURATION=$((TASK_END_TIME - TASK_START_TIME))
    
    # Format duration for human readability
    if [ $DURATION -lt 1 ]; then
        DURATION_FORMATTED="<1s"
    elif [ $DURATION -lt 60 ]; then
        DURATION_FORMATTED="${DURATION}s"
    else
        MINUTES=$((DURATION / 60))
        SECONDS=$((DURATION % 60))
        if [ $SECONDS -eq 0 ]; then
            DURATION_FORMATTED="${MINUTES}m"
        else
            DURATION_FORMATTED="${MINUTES}m${SECONDS}s"
        fi
    fi
    
    echo "🏁 Task completed: $(date) (duration: ${DURATION_FORMATTED})" >> "$HOOK_LOG"
    
    # Update Memory MCP with completion timing
    update_memory_mcp "task_timing" "Task completed at $(date -Iseconds), duration: ${DURATION_FORMATTED}"
    
    # Clean up start time file
    rm -f "$START_TIME_FILE"
else
    echo "🏁 Task completed: $(date) (no start time recorded)" >> "$HOOK_LOG"
    update_memory_mcp "task_timing" "Task completed at $(date -Iseconds)"
fi