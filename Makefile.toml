[config]
default_to_workspace = false
min_version = "0.35.13"
unstable_features = ["CTRL_C_HANDLING"]
skip_core_tasks = true

[config.modify_core_tasks]
private = true
namespace = "default"

#######  MAIN TASKS  #######

[tasks.default]
alias = "start"

[tasks.start]
description = "Start in browser mode with auto-reload"
dependencies = ["install"]
script = '''
> dev_server.log
mzoon/bin/mzoon start ${@} >> dev_server.log 2>&1
'''

[tasks.open]
description = "Start in browser mode and open browser"
dependencies = ["install"]
script = '''
> dev_server.log
mzoon/bin/mzoon start --open ${@} >> dev_server.log 2>&1
'''

[tasks.kill]
description = "Stop all development processes"
script = '''
PORT=$(grep "^port = " MoonZoon.toml | head -1 | cut -d' ' -f3)
KILLED_ANY=false

# Kill process on configured port
PID=$(lsof -ti:$PORT 2>/dev/null || true)
if [ -n "$PID" ]; then
    if kill -TERM $PID 2>/dev/null; then
        echo "Sent TERM signal to process on port $PORT"
        KILLED_ANY=true
    fi
fi

# Kill makers processes
if pkill -TERM -f "makers start" 2>/dev/null; then
    echo "Sent TERM signal to makers process"
    KILLED_ANY=true
fi

# Kill mzoon processes  
if pkill -TERM -f "mzoon" 2>/dev/null; then
    echo "Sent TERM signal to mzoon process"
    KILLED_ANY=true
fi

if [ "$KILLED_ANY" = "true" ]; then
    echo "Waiting 2 seconds for graceful shutdown..."
    sleep 2
    
    # Force kill if still running
    PID=$(lsof -ti:$PORT 2>/dev/null || true)
    if [ -n "$PID" ]; then
        if kill -KILL $PID 2>/dev/null; then
            echo "Force killed process on port $PORT"
        fi
    fi
    
    pkill -KILL -f "makers start" 2>/dev/null && echo "Force killed makers process" || true
    pkill -KILL -f "mzoon" 2>/dev/null && echo "Force killed mzoon process" || true
    
    echo "âœ“ Development processes terminated"
else
    echo "No development processes found to kill"
fi

> dev_server.log
'''

# Tauri-specific tasks
[tasks.tauri]
description = "Start in Tauri desktop mode"
dependencies = ["install", "install_tauri_cli"]
command = "cargo"
args = ["tauri", "dev"]
cwd = "src-tauri"

[tasks.tauri-build]
description = "Build Tauri desktop app"
dependencies = ["install", "install_tauri_cli", "build"]
command = "cargo"
args = ["tauri", "build"]
cwd = "src-tauri"

# Common tasks
[tasks.install]
description = "Install all dependencies. It's NoOp if all deps are already installed."
dependencies = [
    "install_wasm_target", 
    "install_mzoon",
]

[tasks.build]
description = "Build for browser mode (release)"
command = "mzoon/bin/mzoon"
args = ["build", "-r", "-f"]

[tasks.clean]
description = "Clean all build artifacts"
script = '''
mzoon/bin/mzoon clean
cd src-tauri && cargo clean
rm -rf frontend_dist
'''

######  HELPER TASKS  ######

[tasks.install_wasm_target]
description = "Install Rust target `wasm32-unknown-unknown`"
command = "rustup"
args = ["target", "add", "wasm32-unknown-unknown"]

[tasks.install_mzoon]
description = "Install MoonZoon CLI (mzoon) locally"
command = "cargo"
args = [
    "install", 
    "mzoon", 
    "--git", 
    "https://github.com/MoonZoon/MoonZoon",
    "--locked",
    "--rev",
    "7c5178d891cf4afbc2bbbe864ca63588b6c10f2a",
    "--root",
    "mzoon",
]

[tasks.install_tauri_cli]
description = "Install Tauri CLI"
command = "cargo"
args = ["install", "tauri-cli@^2.0.3"]